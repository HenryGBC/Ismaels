package Ismael;


import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author henrygbc
 */

public class Pedidos extends javax.swing.JFrame {
    DefaultTableModel modelo;
    String ID_Editar = "";
    ///home/henrygbc/NetBeansProjects/Ismaels/
    //C:/Users/Ususario/Desktop/Ismaels
    String Ruta = "/home/henrygbc/NetBeansProjects/Ismaels/";
    /**
     * Creates new form Pedidos
     */
    public Pedidos() {
        initComponents();
        setLocation(380,250);
        setSize(900, 600);
        jcbClientes.addItem("Clientes");
        jcbPlatos.addItem("Platos");
        llenarClientes();
        llenarPlatos();
        modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("CLIENTE");
        modelo.addColumn("PLATO");
        modelo.addColumn("FECHA");
        modelo.addColumn("CANTIDAD");
        modelo.addColumn("TOTAL");
        modelo.addColumn("ENTREGADO");
        this.jTable1.setModel(modelo);
        llenarPedidos();
        /*Gesti√≥n*/
      
        jlbCliente.setVisible(false);
        jlbCant.setVisible(false);
        jlbPlato.setVisible(false);
        jlblEntregado.setVisible(false);
        jcbClientes.setVisible(false);
        jcbPlatos.setVisible(false);
        jcbEntregado.setVisible(false);
        jspCant.setVisible(false);
        jbtnAgregar.setVisible(false);
        jbtnEditar.setVisible(false);
        jbtnEliminar.setVisible(false);
        jbtnCancelar.setVisible(false);
        ImageIcon iconFondo = new ImageIcon(Ruta+"ismaels2.png");
        jlbFontImg.setIcon(iconFondo);
        
        
        jlblFecha1.setVisible(false);
        jlblFecha2.setVisible(false);
        jtxFecha1.setVisible(false);
        jtxFecha2.setVisible(false);
        totalDePrecios();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jbtnClientes = new java.awt.Button();
        jbtnPlatos = new java.awt.Button();
        jlbCliente = new javax.swing.JLabel();
        jlbPlato = new javax.swing.JLabel();
        jlbCant = new javax.swing.JLabel();
        jspCant = new javax.swing.JSpinner();
        jcbClientes = new javax.swing.JComboBox();
        jcbPlatos = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbtnAgregar = new javax.swing.JButton();
        jbtnEliminar = new javax.swing.JButton();
        jlblEntregado = new javax.swing.JLabel();
        jcbEntregado = new javax.swing.JComboBox();
        jbtnEditar = new javax.swing.JButton();
        jbtnMostrar = new javax.swing.JButton();
        jbtnAgregarPpal = new javax.swing.JButton();
        jbtnEditarPpal = new javax.swing.JButton();
        jbtnEliminarPpal = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jlbTotal = new javax.swing.JLabel();
        jbtnCancelar = new javax.swing.JButton();
        jlbFontImg = new javax.swing.JLabel();
        jcbFiltrar = new javax.swing.JComboBox();
        jcbFechas = new javax.swing.JComboBox();
        jlblFecha1 = new javax.swing.JLabel();
        jtxFecha1 = new javax.swing.JTextField();
        jlblFecha2 = new javax.swing.JLabel();
        jtxFecha2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 18)); // NOI18N
        label1.setText("PEDIDOS");

        jbtnClientes.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnClientes.setLabel("Clientes");
        jbtnClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClientesActionPerformed(evt);
            }
        });

        jbtnPlatos.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnPlatos.setLabel("Platos");
        jbtnPlatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPlatosActionPerformed(evt);
            }
        });

        jlbCliente.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jlbCliente.setText("Cliente:");
        jlbCliente.setToolTipText("");

        jlbPlato.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jlbPlato.setText("Plato:");

        jlbCant.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jlbCant.setText("Cantidad");

        jspCant.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 12)); // NOI18N

        jcbClientes.setFont(new java.awt.Font("Lucida Sans Typewriter", 3, 12)); // NOI18N

        jcbPlatos.setFont(new java.awt.Font("Lucida Sans Typewriter", 3, 12)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jbtnAgregar.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnAgregar.setText("Agregar");
        jbtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregarActionPerformed(evt);
            }
        });

        jbtnEliminar.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnEliminar.setText("Eliminar");
        jbtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEliminarActionPerformed(evt);
            }
        });

        jlblEntregado.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jlblEntregado.setText("Entregado:");

        jcbEntregado.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 12)); // NOI18N
        jcbEntregado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No", "Si" }));

        jbtnEditar.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnEditar.setText("Editar");
        jbtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditarActionPerformed(evt);
            }
        });

        jbtnMostrar.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnMostrar.setText("MOSTRAR");
        jbtnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMostrarActionPerformed(evt);
            }
        });

        jbtnAgregarPpal.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnAgregarPpal.setText("AGREGAR PEDIDO");
        jbtnAgregarPpal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregarPpalActionPerformed(evt);
            }
        });

        jbtnEditarPpal.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnEditarPpal.setText("EDITAR PEDIDO");
        jbtnEditarPpal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditarPpalActionPerformed(evt);
            }
        });

        jbtnEliminarPpal.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnEliminarPpal.setText("ELIMINAR PEDIDO");
        jbtnEliminarPpal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEliminarPpalActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jLabel1.setText("Total:");

        jlbTotal.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 12)); // NOI18N
        jlbTotal.setText("1120");

        jbtnCancelar.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jbtnCancelar.setText("Cancelar");
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelarActionPerformed(evt);
            }
        });

        jcbFiltrar.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jcbFiltrar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Filtrar", "Todos", "Entregados", "No Entregados", "Clientes", "Platos" }));
        jcbFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFiltrarActionPerformed(evt);
            }
        });

        jcbFechas.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        jcbFechas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Fecha Actual", "Una Fecha", "Dos Fechas" }));
        jcbFechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFechasActionPerformed(evt);
            }
        });

        jlblFecha1.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 12)); // NOI18N
        jlblFecha1.setText("Fecha 1:");

        jtxFecha1.setFont(new java.awt.Font("Lucida Sans Typewriter", 3, 12)); // NOI18N
        jtxFecha1.setText("2013/mm/dd");

        jlblFecha2.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 12)); // NOI18N
        jlblFecha2.setText("Fecha 2:");

        jtxFecha2.setFont(new java.awt.Font("Lucida Sans Typewriter", 3, 12)); // NOI18N
        jtxFecha2.setText("2013/mm/dd");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnCancelar)
                        .addGap(543, 543, 543))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlbTotal)
                        .addGap(144, 144, 144)
                        .addComponent(jbtnMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlbCliente)
                                            .addComponent(jlbPlato))
                                        .addGap(30, 30, 30)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbPlatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jcbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlbCant)
                                        .addGap(30, 30, 30)
                                        .addComponent(jspCant, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlblEntregado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbEntregado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlbFontImg, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtnPlatos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtnAgregarPpal)
                                .addGap(18, 18, 18)
                                .addComponent(jbtnEditarPpal)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jbtnEliminarPpal))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtnClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbFechas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlblFecha1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlblFecha2)
                                    .addComponent(jtxFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtnAgregarPpal)
                            .addComponent(jbtnEditarPpal)
                            .addComponent(jbtnEliminarPpal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlbCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbPlato)
                                    .addComponent(jcbPlatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlbCant)
                                    .addComponent(jspCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlblEntregado)
                                    .addComponent(jcbEntregado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jlbFontImg, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtnAgregar)
                            .addComponent(jbtnEliminar)
                            .addComponent(jbtnEditar)
                            .addComponent(jbtnCancelar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jcbFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jcbFechas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlblFecha1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlblFecha2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtxFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnMostrar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbTotal)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtnClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jbtnPlatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClientesActionPerformed
       Clientes clientes = new Clientes();
       clientes.setVisible(true);
       dispose();
    }//GEN-LAST:event_jbtnClientesActionPerformed

    private void jbtnPlatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPlatosActionPerformed
        Platos platos = new Platos();
        platos.setVisible(true);
        dispose();
    }//GEN-LAST:event_jbtnPlatosActionPerformed

    private void jbtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregarActionPerformed
       String []Datos = new String[7];
       int Entregado = 0;
       String Cliente = jcbClientes.getSelectedItem().toString();
       String Plato = jcbPlatos.getSelectedItem().toString();
       String Cantidad = jspCant.getValue().toString();
       int cant = Integer.parseInt(Cantidad);
       int id_c = consultarIDCliente(Cliente);
       int id_p = consultarIDPlato(Plato);
       String Fecha = new SimpleDateFormat("yyyy/MM/dd").format(Calendar.getInstance().getTime());
       String strEntregado = jcbEntregado.getSelectedItem().toString();
       
       if(strEntregado.equals("Si")){
           Entregado = 1;
       }else{
           Entregado = 0;
       }
       float Total = cant * consultarPrecioPlato(Plato);
       
       Connection c = null;
       Statement stmt = null;
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
             
             String sql = "INSERT INTO PEDIDOS (ID_C,ID_P,FECHA,CANTIDAD,TOTAL,ENTREGADO) VALUES (?,?,?,?,?,?)";
             PreparedStatement pst;
             pst = c.prepareStatement(sql);
             pst.setInt(1, id_c);
             pst.setInt(2, id_p);
             pst.setString(3, Fecha);
             pst.setInt(4, cant);
             pst.setFloat(5, Total);
             pst.setInt(6, Entregado);
            
             
             int n = pst.executeUpdate();
             
             removerFilasTabla();
           
        stmt.close();
        c.commit();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
       
       llenarPedidos();
            jlbCliente.setVisible(false);
            jlbCant.setVisible(false);
            jlbPlato.setVisible(false);
            jlblEntregado.setVisible(false);
            jcbClientes.setVisible(false);
            jcbPlatos.setVisible(false);
            jcbEntregado.setVisible(false);
            jspCant.setVisible(false);
            
            jbtnAgregar.setVisible(false);
    }//GEN-LAST:event_jbtnAgregarActionPerformed

    private void jbtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditarActionPerformed
     String []Datos = new String[7];
       int Entregado = 0;
       String Cliente = jcbClientes.getSelectedItem().toString();
       String Plato = jcbPlatos.getSelectedItem().toString();
       String Cantidad = jspCant.getValue().toString();
       int cant = Integer.parseInt(Cantidad);
       int id_c = consultarIDCliente(Cliente);
       int id_p = consultarIDPlato(Plato);
       String Fecha = new SimpleDateFormat("yyyy/MM/dd").format(Calendar.getInstance().getTime());
       String strEntregado = jcbEntregado.getSelectedItem().toString();
       JOptionPane.showMessageDialog(null, strEntregado);
       if(strEntregado.equals("Si")){
           Entregado = 1;
       }else{
           Entregado = 0;
       }
       float Total = cant * consultarPrecioPlato(Plato);
       
       Connection c = null;
       Statement stmt = null;
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
              //ID_C,ID_P,FECHA,CANTIDAD,TOTAL,ENTREGADO
           
            int n = stmt.executeUpdate("UPDATE PEDIDOS SET "
                     + "ID_C ='"+id_c+"', ID_P ='"+id_p+"', "
                    + "FECHA ='"+Fecha+"', CANTIDAD ='"+cant+"', TOTAL ='"+Total+"', ENTREGADO ='"+Entregado+"'WHERE IDPedidos= '"+ID_Editar+"' ");
             
            removerFilasTabla();

            stmt.close();
            c.commit();
            c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
       
       llenarPedidos();
       
        jlbCliente.setVisible(false);
        jlbCant.setVisible(false);
        jlbPlato.setVisible(false);
        jlblEntregado.setVisible(false);
        jcbClientes.setVisible(false);
        jcbPlatos.setVisible(false);
        jcbEntregado.setVisible(false);
        jspCant.setVisible(false);
        jbtnAgregar.setVisible(false);
        jbtnEditar.setVisible(false);
        jbtnEliminar.setVisible(false);
        
    }//GEN-LAST:event_jbtnEditarActionPerformed

    private void jbtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEliminarActionPerformed
      String []Datos = new String[7]; 
        
        int FilaSeleccionada = jTable1.getSelectedRow();
        if(FilaSeleccionada>=0)
        {   
           Datos[0] = modelo.getValueAt(FilaSeleccionada, 0).toString();
            Connection c = null;
            Statement stmt = null;
            try {
              Class.forName("org.sqlite.JDBC");
              c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
              c.setAutoCommit(false);
              System.out.println("Opened database successfully");

              stmt = c.createStatement();
              String sql = "DELETE from PEDIDOS where IDPedidos='"+Datos[0]+"';";
              stmt.executeUpdate(sql);
              c.commit();
            
            stmt.close();
            c.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
              
              modelo.removeRow(FilaSeleccionada);
            
        }else{
            JOptionPane.showMessageDialog(null,"Tabla vacia o no seleccion√≥ fila");
        }
        jbtnEliminar.setVisible(false);
        jbtnCancelar.setVisible(false);
    }//GEN-LAST:event_jbtnEliminarActionPerformed

    private void jbtnEditarPpalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditarPpalActionPerformed
        
       
        
        String []Datos = new String[7]; 
        int FilaSeleccionada = jTable1.getSelectedRow();
        if(FilaSeleccionada>=0)
        {  
            jlbCliente.setVisible(true);
            jlbCant.setVisible(true);
            jlbPlato.setVisible(true);
            jlblEntregado.setVisible(true);
            jcbClientes.setVisible(true);
            jcbPlatos.setVisible(true);
            jcbEntregado.setVisible(true);
            jspCant.setVisible(true);
            
        
           Datos[0] = modelo.getValueAt(FilaSeleccionada, 0).toString();
           Datos[1] = modelo.getValueAt(FilaSeleccionada, 1).toString();
           Datos[2] = modelo.getValueAt(FilaSeleccionada, 2).toString();
           Datos[3] = modelo.getValueAt(FilaSeleccionada, 3).toString();
           Datos[4] = modelo.getValueAt(FilaSeleccionada, 4).toString();
           Datos[5] = modelo.getValueAt(FilaSeleccionada, 5).toString();
           Datos[6] = modelo.getValueAt(FilaSeleccionada, 6).toString();
           ID_Editar = Datos[0];
           jcbClientes.setSelectedItem(Datos[1]);
           jcbPlatos.setSelectedItem(Datos[2]);
           int Cant = Integer.parseInt(Datos[4]);
           jspCant.setValue(Cant);
           jcbEntregado.setSelectedItem(Datos[6]);
           
           jbtnEditar.setLocation(6, jbtnEditar.getY());
           jbtnEditar.setText("Confirmar Edici√≥n");
           jbtnEditar.setVisible(true);
           jbtnCancelar.setVisible(true);
           
        }else{
            JOptionPane.showMessageDialog(null,"Tabla vacia o no seleccion√≥ fila");
        }
    }//GEN-LAST:event_jbtnEditarPpalActionPerformed

    private void jbtnAgregarPpalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregarPpalActionPerformed
            jlbCliente.setVisible(true);
            jlbCant.setVisible(true);
            jlbPlato.setVisible(true);
            jlblEntregado.setVisible(true);
            jcbClientes.setVisible(true);
            jcbPlatos.setVisible(true);
            jcbEntregado.setVisible(true);
            jspCant.setVisible(true);
            
            jbtnAgregar.setVisible(true);
            jbtnCancelar.setVisible(true);
    }//GEN-LAST:event_jbtnAgregarPpalActionPerformed

    private void jbtnEliminarPpalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEliminarPpalActionPerformed
     
     jbtnEliminar.setLocation(6, jbtnEditar.getY());
     jbtnEliminar.setVisible(true);
     jbtnCancelar.setVisible(true);
    }//GEN-LAST:event_jbtnEliminarPpalActionPerformed

    private void jbtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelarActionPerformed
      
        jlbCliente.setVisible(false);
        jlbCant.setVisible(false);
        jlbPlato.setVisible(false);
        jlblEntregado.setVisible(false);
        jcbClientes.setVisible(false);
        jcbPlatos.setVisible(false);
        jcbEntregado.setVisible(false);
        jspCant.setVisible(false);
        jbtnAgregar.setVisible(false);
        jbtnEditar.setVisible(false);
        jbtnEliminar.setVisible(false);
        jbtnCancelar.setVisible(false);
    }//GEN-LAST:event_jbtnCancelarActionPerformed

    private void jbtnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMostrarActionPerformed
     String Filtrar = jcbFiltrar.getSelectedItem().toString();
     int valorEntregado = 0;
  
     if(Filtrar.equals("Entregados") || Filtrar.equals("No Entregados"))
     {    
         if(Filtrar.equals("Entregados"))
         {
             valorEntregado = 1;
         }else{
             valorEntregado =0;
         }
         
         String FiltroFecha = jcbFechas.getSelectedItem().toString();
         
         if(FiltroFecha.equals("Todos"))
         {  
            
             mostrarEntregados(valorEntregado, FiltroFecha, "", "");
            
         }
         if(FiltroFecha.equals("Fecha Actual"))
         {
             String FechaActual = new SimpleDateFormat("yyyy/MM/dd").format(Calendar.getInstance().getTime());
             mostrarEntregados(valorEntregado, FiltroFecha, FechaActual, "");
             
         }
         if(FiltroFecha.equals("Una Fecha"))
         {
             String Fecha = jtxFecha1.getText();
             
             mostrarEntregados(valorEntregado, FiltroFecha, Fecha, "");
             
         }
         if(FiltroFecha.equals("Dos Fechas"))
         {
             String Fecha1 = jtxFecha1.getText();
             String Fecha2 = jtxFecha2.getText();
              JOptionPane.showMessageDialog(null, Fecha2);
             mostrarEntregados(valorEntregado, FiltroFecha, Fecha1, Fecha2);
             
         }
         
         
     }
     if(Filtrar.equals("Todos"))
     {
         llenarPedidos();
     }
        
    }//GEN-LAST:event_jbtnMostrarActionPerformed

    private void jcbFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFiltrarActionPerformed
     
       
    }//GEN-LAST:event_jcbFiltrarActionPerformed

    private void jcbFechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFechasActionPerformed
       String Fechas = jcbFechas.getSelectedItem().toString();
       
       if (Fechas.equals("Una Fecha"))
       {
        jlblFecha1.setVisible(true);
        jlblFecha2.setVisible(false);
        jtxFecha1.setVisible(true);
        jtxFecha2.setVisible(false);
       }
       if (Fechas.equals("Dos Fechas"))
       {
        jlblFecha1.setVisible(true);
        jlblFecha2.setVisible(true);
        jtxFecha1.setVisible(true);
        jtxFecha2.setVisible(true);
       }
       if (Fechas.equals("Fecha Actual") || Fechas.equals("Todos") )
       {
        jlblFecha1.setVisible(false);
        jlblFecha2.setVisible(false);
        jtxFecha1.setVisible(false);
        jtxFecha2.setVisible(false);
       }
    }//GEN-LAST:event_jcbFechasActionPerformed
    public void mostrarEntregados(int Entregados, String FiltroFecha, String Fecha1, String Fecha2)
    {
           String []Datos = new String[7];
       Connection c = null;
       Statement stmt = null;
       try{
            Class.forName("org.sqlite.JDBC");
          
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
            String Consulta = "";
            if(FiltroFecha.equals("Todos"))
            {
                Consulta = "SELECT * FROM PEDIDOS WHERE Entregado ='"+Entregados+"' ORDER BY FECHA ASC ;";
            }
            if(FiltroFecha.equals("Fecha Actual") || FiltroFecha.equals("Una Fecha")  )
            {
                Consulta = "SELECT * FROM PEDIDOS WHERE Entregado ='"+Entregados+"' AND FECHA ='"+Fecha1+"' ORDER BY FECHA ASC ;";
            }
             if(FiltroFecha.equals("Dos Fechas"))
            {  
                JOptionPane.showMessageDialog(null, Fecha2);
                Consulta = "SELECT * FROM PEDIDOS WHERE Entregado ='"+Entregados+"' AND FECHA BETWEEN '"+Fecha1+"' AND  '"+Fecha2+"' ORDER BY FECHA ASC ;";
            }
            ResultSet rs = stmt.executeQuery( Consulta );
            removerFilasTabla();
         while ( rs.next() ) {
                int id = rs.getInt("IDPedidos");
                int id_c = rs.getInt("ID_C");
                int id_p = rs.getInt("ID_P");
                String Fecha = rs.getString("FECHA");
                int Cantidad = rs.getInt("CANTIDAD");
                String Total = rs.getString("TOTAL");
                int Entregado = rs.getInt("Entregado");
                Datos[0] = Integer.toString(id);
                Datos[1] = consultarCliente(id_c);
                Datos[2] = consultarPlato(id_p);
                Datos[3] = Fecha.toString();
                Datos[4] = Integer.toString(Cantidad);
                Datos[5] = Total;
                
                if(Entregado == 0){
                     Datos[6] = "No";
                }else{
                     Datos[6] = "Si";
                }
               
                modelo.addRow(Datos);
                totalDePrecios();
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
    }
    /**
     * @param args the command line arguments
     */
    public void llenarClientes() {
        
       Connection c = null;
       Statement stmt = null;
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( "SELECT NOMBRE FROM CLIENTES;" );
            
         while ( rs.next() ) {
                
                String name = rs.getString("NOMBRE");
                jcbClientes.addItem(name);
               
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
    }
    public void llenarPlatos(){
       
       Connection c = null;
       Statement stmt = null;
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( "SELECT NOMBRE FROM PLATOS;" );
            
         while ( rs.next() ) {
             
                String name = rs.getString("NOMBRE");
                jcbPlatos.addItem(name);
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
    }
    public void llenarPedidos(){
      String []Datos = new String[7];
       Connection c = null;
       Statement stmt = null;
       String consulta = "SELECT * FROM PEDIDOS ORDER BY FECHA DESC;";
       String FiltrarFecha ="";
       String Fecha1 = "";
       String Fecha2 = "";
       FiltrarFecha = jcbFechas.getSelectedItem().toString();
       try{
            Class.forName("org.sqlite.JDBC");
          
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            if(FiltrarFecha.equals("Fecha Actual"))
            {
                Fecha1 =  new SimpleDateFormat("yyyy/MM/dd").format(Calendar.getInstance().getTime());
                consulta = "SELECT * FROM PEDIDOS WHERE FECHA ='"+Fecha1+"' ORDER BY FECHA ASC ;";
            }
            if(FiltrarFecha.equals("Una Fecha"))
            {
                Fecha1 =  jtxFecha1.getText();
                consulta = "SELECT * FROM PEDIDOS WHERE FECHA ='"+Fecha1+"' ORDER BY FECHA ASC ;";
            }
            if(FiltrarFecha.equals("Dos Fechas"))
            {  
                Fecha1 =  jtxFecha1.getText();
                Fecha2 =  jtxFecha2.getText();
                consulta = "SELECT * FROM PEDIDOS WHERE FECHA BETWEEN '"+Fecha1+"' AND  '"+Fecha2+"' ORDER BY FECHA ASC ;";
            }
            
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( consulta );
            removerFilasTabla();
         while ( rs.next() ) {
                int id = rs.getInt("IDPedidos");
                int id_c = rs.getInt("ID_C");
                int id_p = rs.getInt("ID_P");
                String Fecha = rs.getString("FECHA");
                int Cantidad = rs.getInt("CANTIDAD");
                String Total = rs.getString("TOTAL");
                int Entregado = rs.getInt("Entregado");
                Datos[0] = Integer.toString(id);
                Datos[1] = consultarCliente(id_c);
                Datos[2] = consultarPlato(id_p);
                Datos[3] = Fecha.toString();
                Datos[4] = Integer.toString(Cantidad);
                Datos[5] = Total;
                
                if(Entregado == 0){
                     Datos[6] = "No";
                }else{
                     Datos[6] = "Si";
                }
               
                modelo.addRow(Datos);
                totalDePrecios();
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
    }
    public String consultarPlato(int Id_P){
       String id_p = Integer.toString(Id_P);
       Connection c = null;
       Statement stmt = null;
       String nombre = "";
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( "SELECT NOMBRE FROM PLATOS WHERE ID_P='"+id_p+"';" );
            
         while ( rs.next() ) {
             
                nombre = rs.getString("NOMBRE");
                
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
       return nombre;
    }
    public String consultarCliente(int Id_C){
        String id_c = Integer.toString(Id_C); 
        Connection c = null; 
       Statement stmt = null;
       String nombre = "";
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( "SELECT NOMBRE FROM CLIENTES WHERE ID='"+id_c+"';" );
            
         while ( rs.next() ) {
                
                nombre = rs.getString("NOMBRE");
               
               
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
       return nombre;
    }
    public int consultarIDPlato(String Plato){
       int id_p = 0;
       Connection c = null;
       Statement stmt = null;
       String nombre = "";
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( "SELECT ID_P FROM PLATOS WHERE NOMBRE='"+Plato+"';" );
            
         while ( rs.next() ) {
             
                id_p = rs.getInt("ID_P");
                
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
       return id_p;
    }
    public int consultarIDCliente(String Cliente){
        int id_c = 0;
       Connection c = null;
       Statement stmt = null;
       String nombre = "";
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( "SELECT ID FROM CLIENTES WHERE NOMBRE='"+Cliente+"';" );
            
         while ( rs.next() ) {
             
                id_c = rs.getInt("ID");
                
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
       return id_c;
    }
    public float consultarPrecioPlato(String Plato){
       float precio= 0;
       Connection c = null;
       Statement stmt = null;
       String nombre = "";
       try{
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:"+Ruta+"Ismael.sqlite");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( "SELECT PRECIO FROM PLATOS WHERE NOMBRE='"+Plato+"';" );
            
         while ( rs.next() ) {
             
                precio = rs.getFloat("PRECIO");
                
        }
         rs.close();
        stmt.close();
        c.close();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
       return precio;
    }
     public void removerFilasTabla(){
      int cantidadFilas = jTable1.getRowCount();
       for (int i = cantidadFilas-1; i >=0; i--) {
            modelo.removeRow(i);
           
       }
   }
     public void totalDePrecios(){
         String strPrecio = "";
         float precio = 0;
         float pre = 0;
         int cantidadFilas = jTable1.getRowCount();
         for (int i = cantidadFilas-1; i >=0; i--) {
            strPrecio = modelo.getValueAt(i, 5).toString();
            precio = Float.parseFloat(strPrecio);
            pre = pre +precio; 
            
           
         }
         jlbTotal.setText(Float.toString(pre));
     }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pedidos().setVisible(true);
                 
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnAgregar;
    private javax.swing.JButton jbtnAgregarPpal;
    private javax.swing.JButton jbtnCancelar;
    private java.awt.Button jbtnClientes;
    private javax.swing.JButton jbtnEditar;
    private javax.swing.JButton jbtnEditarPpal;
    private javax.swing.JButton jbtnEliminar;
    private javax.swing.JButton jbtnEliminarPpal;
    private javax.swing.JButton jbtnMostrar;
    private java.awt.Button jbtnPlatos;
    private javax.swing.JComboBox jcbClientes;
    private javax.swing.JComboBox jcbEntregado;
    private javax.swing.JComboBox jcbFechas;
    private javax.swing.JComboBox jcbFiltrar;
    private javax.swing.JComboBox jcbPlatos;
    private javax.swing.JLabel jlbCant;
    private javax.swing.JLabel jlbCliente;
    private javax.swing.JLabel jlbFontImg;
    private javax.swing.JLabel jlbPlato;
    private javax.swing.JLabel jlbTotal;
    private javax.swing.JLabel jlblEntregado;
    private javax.swing.JLabel jlblFecha1;
    private javax.swing.JLabel jlblFecha2;
    private javax.swing.JSpinner jspCant;
    private javax.swing.JTextField jtxFecha1;
    private javax.swing.JTextField jtxFecha2;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
